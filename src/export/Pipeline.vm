#**
This creates the complete java pipeline.
*##set($filterContours = 0)
//Import all needed files
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.opencv.core.*;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.*;

/**
* Pipeline class.
* 
* <P>Autogenerated pipeline from GRIP. Modify these comments to fit your needs.
*  
* @author GRIP
*/
public class Pipeline{

	protected Map<String,Object> outputs;
#set($numSources = $pipeline.getNumSources())
#set($i = 0)
#parse("/src/export/CreateSourceMembers.vm")
	
	/**
	 * This constructor sets up the pipeline
	 */
	public Pipeline(){
		outputs = new HashMap<String,Object>();
	}
	
	/**
	 * This is the primary method that runs the entire pipeline.
	 * @return Returns the first output of the last step as an object. This should be modified to fit your needs.
	 */
	protected void processImage(){
#set($count = 0)
#foreach($step in $pipeline.getSteps())
#set($c = $count)
		//Step$count: $step.getName(): 
#if($step.getName().equals("CV dilate"))
#parse("/src/export/CV dilate.vm")
#elseif($step.getName().equals("CV bitwise_or"))
#parse("/src/export/CV bitwise_or.vm")
#elseif($step.getName().equals("HSV Threshold"))
#parse("/src/export/HSV Threshold.vm")
#elseif($step.getName().equals("Find Contours"))
#parse("/src/export/Find Contours.vm")
#elseif($step.getName().equals("Filter Contours"))
#parse("/src/export/Filter Contours.vm")
#set($filterContours = 1)
#else
		//Operation not found
#end
#set($count = $count + 1)


#end
	}

#set($i = 0)
#parse("/src/export/SetSources.vm")


#foreach($step in $pipeline.getSteps())
#foreach($output in $step.getOutputs())
	public ${output.getValueType()} get${output.varName()}(){
		return (${output.getValueType()}) outputs.get("${output.varName()}");
	}
#end
#end

	#parse("/src/export/showImage.vm")
	
	#parse("/src/export/showContours.vm")
	
	#if($filterContours == 1)
	#parse("/src/export/Filter Contours Method.vm")
	#end
	
}